# Tiền xử lý dữ liệu
curl -o moviedata.csv  https://raw.githubusercontent.com/yinghaoz1/tmdb-movie-dataset-analysis/master/tmdb-movies.csv
awk -F',' '{for (i=1; i<=NF; i++) if ($i == "") $i = "N/A"; print}' OFS=',' moviedata.csv > moviedata_new.csv #xử lý dữ liệu null
mkdir /home/thinh/project_1 # tạo thư mục project

#Câu 1 Sắp xếp các bộ phim theo ngày phát hành giảm dần rồi lưu ra một file mới
csvsql --query "SELECT original_title,release_date FROM moviedata_new ORDER BY release_date DESC" moviedata_new.csv > /home/thinh/project_1/cau_1.csv


#Câu 2 Lọc ra các bộ phim có đánh giá trung bình trên 7.5 rồi lưu ra một file mới

csvsql --query "SELECT original_title,vote_average FROM moviedata_new WHERE vote_average >= 7.5 ORDER BY vote_average DESC" 
moviedata_new.csv > /home/thinh/project_1/cau_2.csv

#Câu 3 Tìm ra phim nào có doanh thu cao nhất và doanh thu thấp nhất
csvsql --query "SELECT original_title,MAX(revenue), FROM moviedata_new" moviedata_new.csv
csvsql --query "SELECT original_title,MAX(revenue) FROM moviedata_new" moviedata_new.csv
# Doanh thu cao nhất
csvsql --query "SELECT original_title,MIN(revenue) FROM moviedata_new" moviedata_new.csv
csvsql --query "SELECT original_title,MIN(revenue_adj) FROM moviedata_new" moviedata_new.csv


#Câu 4 Tính tổng doanh thu tất cả các bộ phim
csvsql --query "SELECT SUM(revenue) FROM moviedata_new" moviedata_new.csv
csvsql --query "SELECT SUM(revenue_adj) FROM moviedata_new" moviedata_new.csv



#Câu 5 op 10 bộ phim đem về lợi nhuận cao nhất

csvsql --query "SELECT original_title,(revenue - budget) as profit  FROM moviedata_new ORDER BY (revenue - budget) DESC LIMIT 10" 
moviedata_new.csv > /home/thinh/project_1/cau_5.csv




#Câu 6_1 Đạo diễn nào có nhiều bộ phim nhất 

csvcut -c id,director moviedata_new.csv > cau_6_data.csv

## Xử lý dấu pipe
awk -F',' '{
n = split($2, director, "|");
for (i = 1; i <= n; i++) {
gsub(/"/, "", director[i]);
printf "%s,%s\n", $1, director[i];
}
}' cau_6_data.csv > cau_6_data_1.csv

csvsql --query "SELECT director,COUNT(id) as number_film FROM cau_6_data_1 GROUP BY director ORDER BY COUNT(id) DESC LIMIT 1" cau_6_data_1.csv


#Câu 6_2 diễn viên nào đóng nhiều phim nhất
csvcut -c  id,cast moviedata_new.csv > cau_6_data_2.csv # Lấy id, cast ra file mới
## Xử lý dấu pipe
awk -F',' '{
n = split($2, cast, "|");
for (i = 1; i <= n; i++) {
gsub(/"/, "", cast[i]);
printf "%s,%s\n", $1, cast[i];
}
}' cau_6_data_2.csv > cau_6_data_3.csv
sed '1s/id,cast/id,name/' cau_6_data_3.csv > cau_6_data_4.csv # thay đổi tên cột cast thành name vì cast khi dùng csvsql sẽ bị lỗi
#Kết quả câu 6
csvsql --query "SELECT name,COUNT(id) as number_film FROM cau_6_data_4 GROUP BY name HAVING name is not null  ORDER BY COUNT(id) DESC LIMIT 1" cau_6_data_4.csv



# Câu 7 Thống kê số lượng phim theo các thể loại.
csvcut -c id,genres moviedata_new.csv > cau_7_data.csv
## Xử lý dấu pipe
awk -F',' '{
n = split($2, genres, "|");
for (i = 1; i <= n; i++) {
gsub(/"/, "", genres[i]);
printf "%s,%s\n", $1, genres[i];
}
}' cau_7_data.csv > cau_7_1.csv
## Kết quả câu 7
csvsql --query "SELECT genres, COUNT(id) as number_film FROM cau_7_1 GROUP BY genres HAVING genres is not null ORDER BY COUNT(id) DESC" cau_7_1.csv > /home/thinh/project_1/cau_7.csv
